#MAINACTIVITY.JAVA
package com.example.medicinealarm;

import android.app.DatePickerDialog;
import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

import java.util.Calendar;

public class MainActivity extends AppCompatActivity {

    private Switch modeSwitch;
    private Button insertButton, fetchButton;
    private LinearLayout medicineNameLayout;
    private EditText medicineNameInput, dateInput;
    private Spinner timeOfDaySpinner;
    private DataBaseConn db;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        modeSwitch = findViewById(R.id.switch1);
        insertButton = findViewById(R.id.insert);
        fetchButton = findViewById(R.id.fetch);
        medicineNameLayout = findViewById(R.id.medicine_name_layout);
        medicineNameInput = findViewById(R.id.editTextText);
        dateInput = findViewById(R.id.editTextDate);
        timeOfDaySpinner = findViewById(R.id.spinner);

        db = new DataBaseConn(this);

        setupSwitchListener();
        setupInsertButton();
        setupFetchButton();
        setupDatePicker(); // Add DatePicker functionality here
    }

    private void setupSwitchListener() {
        modeSwitch.setOnCheckedChangeListener((buttonView, isChecked) -> {
            if (isChecked) {
                fetchButton.setVisibility(View.VISIBLE);
                insertButton.setVisibility(View.GONE);
                medicineNameLayout.setVisibility(View.GONE);
                medicineNameInput.setVisibility(View.GONE);
            } else {
                fetchButton.setVisibility(View.GONE);
                insertButton.setVisibility(View.VISIBLE);
                medicineNameLayout.setVisibility(View.VISIBLE);
                medicineNameInput.setVisibility(View.VISIBLE);
            }
        });
    }

    private void setupInsertButton() {
        insertButton.setOnClickListener(v -> {
            String name = medicineNameInput.getText().toString();
            String date = dateInput.getText().toString();
            String timeOfDay = timeOfDaySpinner.getSelectedItem().toString();

            if (name.isEmpty() || date.isEmpty()) {
                Toast.makeText(this, "Please fill all fields", Toast.LENGTH_SHORT).show();
            } else {
                boolean result = db.insertData(name, date, timeOfDay);
                if (result) {
                    Toast.makeText(this, "Inserted Successfully", Toast.LENGTH_SHORT).show();
                } else {
                    Toast.makeText(this, "Insert Failed", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    private void setupFetchButton() {
        fetchButton.setOnClickListener(v -> {
            String date = dateInput.getText().toString();
            String timeOfDay = timeOfDaySpinner.getSelectedItem().toString();

            if (date.isEmpty()) {
                Toast.makeText(this, "Please enter a date", Toast.LENGTH_SHORT).show();
            } else {
                Cursor cursor = db.fetchData(date, timeOfDay);
                if (cursor.getCount() == 0) {
                    Toast.makeText(this, "No Data Found", Toast.LENGTH_SHORT).show();
                } else {
                    StringBuilder result = new StringBuilder();
                    while (cursor.moveToNext()) {
                        result.append("Name: ").append(cursor.getString(1)).append("\n");
                    }
                    Toast.makeText(this, result.toString(), Toast.LENGTH_LONG).show();
                }
            }
        });
    }

    private void setupDatePicker() {
        dateInput.setOnClickListener(v -> showDatePickerDialog());
    }

    private void showDatePickerDialog() {
        // Get the current date
        final Calendar calendar = Calendar.getInstance();
        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH);
        int day = calendar.get(Calendar.DAY_OF_MONTH);

        // Create a DatePickerDialog
        DatePickerDialog datePickerDialog = new DatePickerDialog(
                this,
                (view, selectedYear, selectedMonth, selectedDay) -> {
                    // Set the selected date on the EditText
                    String date = selectedDay + "/" + (selectedMonth + 1) + "/" + selectedYear;
                    dateInput.setText(date);
                },
                year, month, day
        );

        datePickerDialog.show();
    }
}

#DATABASECONN
package com.example.medicinealarm;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DataBaseConn extends SQLiteOpenHelper {

    private static final String DATABASE_NAME = "Medicine.db";
    private static final String TABLE_NAME = "medicine_table";
    private static final String COL_1 = "ID";
    private static final String COL_2 = "NAME";
    private static final String COL_3 = "DATE";
    private static final String COL_4 = "TIME_OF_DAY";

    public DataBaseConn(Context context) {
        super(context, DATABASE_NAME, null, 1);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE " + TABLE_NAME + " (" +
                COL_1 + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COL_2 + " TEXT, " +
                COL_3 + " TEXT, " +
                COL_4 + " TEXT)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
        onCreate(db);
    }

    public boolean insertData(String name, String date, String timeOfDay) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put(COL_2, name);
        contentValues.put(COL_3, date);
        contentValues.put(COL_4, timeOfDay);

        long result = db.insert(TABLE_NAME, null, contentValues);
        return result != -1;
    }

    public Cursor fetchData(String date, String timeOfDay) {
        SQLiteDatabase db = this.getReadableDatabase();
        return db.rawQuery("SELECT * FROM " + TABLE_NAME + " WHERE " +
                COL_3 + "=? AND " + COL_4 + "=?", new String[]{date, timeOfDay});
    }
}

#XML
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:layout_marginRight="10dp"
        android:orientation="horizontal">

        <TextView
            android:id="@+id/textView"
            android:layout_width="100dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="MEDICINE DATEBASE"
            android:textSize="30sp"/>
    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:layout_marginRight="10dp"
        android:orientation="horizontal">

        <TextView
            android:id="@+id/textView2"
            android:layout_width="100dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:text="Insert"
            android:textSize="20sp"
            android:textAllCaps="false"/>

        <Switch
            android:id="@+id/switch1"
            android:layout_width="wrap_content"
            android:layout_height="48dp"
            android:layout_weight="1"/>

        <TextView
            android:id="@+id/textView3"
            android:layout_width="wrap_content"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:text="Fetch"
            android:textSize="20sp"/>
    </LinearLayout>

    <LinearLayout
        android:id="@+id/medicine_name_layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:layout_marginRight="10dp"
        android:orientation="horizontal">

        <TextView
            android:id="@+id/textView4"
            android:layout_width="100dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Medicine Name"
            android:textSize="24dp"/>

        <EditText
            android:id="@+id/editTextText"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:ems="10"
            android:inputType="text"
            android:hint="Enter medicine name"
            android:textSize="20sp"/>
    </LinearLayout>


    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:layout_marginRight="10dp"
        android:orientation="horizontal">

        <TextView
            android:id="@+id/textView5"
            android:layout_width="100dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Date"
            android:textSize="24dp"/>

        <EditText
            android:id="@+id/editTextDate"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:ems="10"
            android:hint="Enter date"
            android:focusable="false"
            android:clickable="true"
            android:textSize="24sp"/>

    </LinearLayout>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:layout_marginRight="10dp"
        android:orientation="horizontal">

        <TextView
            android:id="@+id/textView6"
            android:layout_width="100dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Time of the Day"
            android:textSize="20sp"/>

        <Spinner
            android:id="@+id/spinner"
            android:layout_width="24dp"
            android:layout_height="48dp"
            android:layout_weight="1"
            android:entries="@array/timeoftheday"/>
    </LinearLayout>

    <Button
        android:id="@+id/insert"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="INSERT"/>
    <Button
        android:id="@+id/fetch"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="FETCH"/>

    <TextView
        android:id="@+id/textView7"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Suhas\n1NT21CS181"
        android:layout_marginTop="30dp"/>

</LinearLayout>


#STRING.XML
<resources>
    <string name="app_name">MedicineAlarm</string>
    <string-array name="timeoftheday">
        <item> Morning </item>
        <item> Afternoon </item>
        <item> Evening </item>
        <item> Night </item>
    </string-array>
</resources>
